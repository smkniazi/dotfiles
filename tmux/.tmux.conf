#Colors
#RGB
MYBLACK="#000000" #232
MYWHITE="#ffffff"
MYGRAY="#d3d3d3" #252
MYRED="#d7005f" #124
MYGREEN="#718c00" #28
MYORANGE="#d75f00" #64
MYYELLOW="#eeee00" #226
MYBLUE="#0087af" #31
MYPURPLE="#8959a8" #102
MYCYAN="#03A9F4" #24
MYDEFAULT="default"
MYSOLAR="#fdf6e3"

#8bit
#MYBLACK="colour232"
#MYWHITE="colour16"
#MYGRAY="colour252"
#MYRED="colour124"
#MYGREEN="colour28"
#MYORANGE="colour64"
#MYYELLOW="colour226"
#MYBLUE="colour31"
#MYPURPLE="colour102"
#MYCYAN="colour24"
#MYDEFAULT="default"

# no delay if ESC is pressed. Delay slows down the vim mode changes
set -s escape-time 0

# clear screen
bind -n C-l  send-keys "clear" \; send-keys "Enter"  
#bind -n C-k  send-keys "clear" \; send-keys "Enter"  

# display pane numbers
bind -n M-n display-panes  

# select pane
bind -n M-N command-prompt 'select-pane -t %%'

#move the status bar to top
set-option -g status-position top

# start indexes from 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename off
set-option -g allow-rename off

# keep the terminal title sync with tmux
set-option -g set-titles on 
#set-option -g set-titles-string "#S / #W"
set-option -g set-titles-string "#S/#h"

# deattach tmux session
bind -n M-d detach-client

# moving panes
bind -n M-w break-pane

# vi mode visual mode
set set-clipboard off
setw -g mode-keys vi
set -g status-keys vi
set-window-option -g mode-keys vi
bind -n M-v copy-mode
#set-option -s set-clipboard on
bind-key -T copy-mode-vi 'v' send -X begin-selection
#copy paste linux
if-shell "[[ $(uname) == Linux ]]" "bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -i -r -sel p -f | xclip -i -r -sel c' " 
if-shell "[[ $(uname) == Linux ]]" "bind-key -T copy-mode-vi 'Y' send -X copy-pipe            'xclip -i -r -sel p -f | xclip -i -r -sel c' " 
if-shell "[[ $(uname) == Linux ]]" "bind -n M-p run 'tmux set-buffer $(xclip -sel p -o); tmux paste-buffer' "
#copy paste darwin
if-shell "[[ $(uname) == Darwin ]]" "bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy' "
if-shell "[[ $(uname) == Darwin ]]" "bind-key -T copy-mode-vi 'Y' send -X copy-pipe            'pbcopy' "
if-shell "[[ $(uname) == Darwin ]]" "bind -n M-p run 'tmux set-buffer $(pbpaste); tmux paste-buffer' "

# using OSC52
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'yank' 
#bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank' 

#selection colour
set-window-option -g mode-style fg="$MYDEFAULT",bg="$MYCYAN"

# window creation
bind -n M-t new-window -c "#{pane_current_path}"
bind -n M-T display-popup -d "#{pane_current_path}"

# zoom pane
bind -n M-F if-shell "$is_vim" "send-keys M-F; resize-pane -Z" "resize-pane -Z"

#rename window , session
bind -n M-r command-prompt 'rename-window  %%'
bind -n M-R command-prompt 'rename-session  %%'

#move windows
bind -n M-Left  swap-window -t -1 \; previous-window
bind -n M-Right swap-window -t +1 \; next-window

#kill commands
bind -n M-q confirm-before 'kill-window'
bind -n M-Q confirm-before 'kill-session'

# renumber windows when a window is killed
set-option -g renumber-windows on

# set history limits
set -g history-limit 20000
bind -n C-l  send-keys C-l \; clear-history 

# enable mouse tmux >= 2.1
set  -g mouse off

# Toggle mouse on
bind -n M-m if -F '#{mouse}'  \
    'set -g mouse off; \
    display-message "Mouse OFF"' \
    'set -g mouse on; \
    display-message "Mouse ON"'


# window splitting
bind -n M-[ split-window -h -c "#{pane_current_path}"
bind -n M-] split-window -v -c "#{pane_current_path}"

# Vim style pane selection
#bind -n M-h select-pane -L
#bind -n M-j select-pane -D 
#bind -n M-k select-pane -U
#bind -n M-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#pane selection in copy mode
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

#dumb pane selection 
#bind -n C-l  select-pane -R
#bind -n C-h  select-pane -L
#bind -n C-j  select-pane -D
#bind -n C-k  select-pane -U

# resize panes
bind -n M-J if-shell "$is_vim" "send-keys M-J" "resize-pane -D"
bind -n M-K if-shell "$is_vim" "send-keys M-K" "resize-pane -U"
bind -n M-H if-shell "$is_vim" "send-keys M-H" "resize-pane -L"
bind -n M-L if-shell "$is_vim" "send-keys M-L" "resize-pane -R"
#bind -m M-V select-layout -t even-vertical

# window navigation
bind -n M-i previous-window
bind -n M-o next-window
bind -n M-g last-window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-0 command-prompt 'select-window  -t %%'

# switch sessions
bind -n M-I switch-client -p
bind -n M-O switch-client -n

#eload conf
bind -n M-z source-file ~/.tmux.conf \; display-message "config file is meloaded"

# pane sysnchronization
bind  -n M-s if -F '#{pane_synchronized}' \
                     'setw synchronize-panes off; \
                      setw pane-active-border-style fg="$MYBLACK",bg="$MYGRAY"; \
                      setw pane-border-style fg="$MYBLACK",bg="$MYDEFAULT"; \
                      display-message "Sync OFF"' \
                   'setw synchronize-panes on; \
                    setw pane-active-border-style fg="$MYBLACK",bg="$MYRED"; \
                    setw pane-border-style fg="$MYRED",bg="$MYDEFAULT"; \
                    display-message "Sync ON"' 
# toggle status bar
# bind -n M-T set -g status

bind -n M-D set window-style fg="$MYDEFAULT",bg="$MYDEFAULT"\; setw pane-border-style fg="#000000",bg="$MYDEFAULT"\; setw pane-active-border-style fg="$MYBLACK",bg="$MYGRAY"
#bind -n M-W set window-style fg="$MYBLACK",bg="$MYWHITE"   \; setw pane-border-style fg="$MYBLACK",bg="$MYWHITE"\; setw pane-active-border-style fg="$MYBLACK",bg="$MYGRAY"
bind -n M-B set window-style fg="$MYWHITE",bg="$MYBLACK"   \; setw pane-border-style fg="$MYWHITE",bg="$MYBLACK"\; setw pane-active-border-style fg="$MYWHITE",bg="$MYGRAY"
bind -n M-W set window-style fg="$MYDEFAULT",bg="$MYSOLAR"\; setw pane-border-style fg="#000000",bg="$MYSOLAR"\; setw pane-active-border-style fg="$MYBLACK",bg="$MYGRAY"

#run commands
#bind -n M-P  run-shell "cat ~/file | xclip -i -sel p -f | xclip -i -sel c > /dev/null"
#bind -n M-U run "tmux set-buffer \"$(cat ~/.file1)\"; tmux paste-buffer"

#become root
bind -n M-! run-shell '~/.local/bin/tmux-command1 #S'

#active pane highlight
#set-hook -g after-select-pane 'run-shell "tid=$(tmux run \"echo #{pane_id}\"); tmux select-pane -t:.$tid  -P bg=#d3d3d3; sleep 0.1; tmux select-pane -t:.$tid  -P bg=default;"' 
set-hook -g after-select-pane 'run-shell "tmux set-option -g display-panes-colour \"$MYBLACK\"; \
                               tmux set-option -g display-panes-active-colour \"$MYRED\"; \
                               tmux display-panes -d 300; \
                               tmux set-option -g display-panes-colour \"$MYBLACK\"; \
                               tmux set-option -g display-panes-active-colour \"$MYRED\"; "' 

# visual bell 
set-window-option -g monitor-bell on
set-window-option -g bell-action other
set-window-option -g visual-bell off #do not display text in status bar 

# monitor activiy 
set-window-option -g monitor-activity off
set-window-option -g activity-action other
set-window-option -g visual-activity off #do not display text in status bar 

######################
### DESIGN CHANGES ###
######################

# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
#set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# active window title style
setw -g window-status-current-format '#[fg=$MYBLACK,bg=$MYGREEN] * #[bold]#I: #W * | '
setw -g window-status-format '#[fg=$MYBLACK,bg=$MYGRAY]  #I: #W     |'

# right status (clock)
set -g status-left-length 30
set -g status-right-length 50
#man strftime
set -g status-right "[#(tmux-mem-cpu-load -s)] %B %d, %T"
set -g status-interval 1

# default statusbar colors
set-option -g status-bg "$MYGRAY"
set-option -g status-fg "$MYBLACK"

# default window title colors
set-window-option -g window-status-style fg="$MYBLACK",bg="$MYGRAY"

# active window title colors
set-window-option -g window-status-current-style fg="$MYBLACK",bg="$MYGREEN"

# pane border
set-option -g pane-border-style fg="$MYBLACK",bg="$MYDEFAULT"
set-option -g pane-active-border-style fg="$MYBLACK",bg="$MYGRAY"

# message text
set-option -g message-style fg="$MYBLACK",bg="$MYGREEN"

# left and right status
set -g status-right-style fg="$MYBLACK"  
set -g status-left-style fg="$MYBLACK",bg="$MYORANGE"
