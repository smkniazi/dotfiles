#!/bin/bash
    set -e
	if [ ! "$#" -eq 3 ]; then
	    echo "Please enter branch names"
	    echo "./command {dst-branch} {src-remote} {src-branch}"
	    echo "Example ./command {HopsXYZ} {upstream-ee} {master}"
	    exit 1
    fi

	pushd . &> /dev/null && \
    base_folder="~/code/hops"

    dst_branch=$1
    src_remote=$2
    src_branch=$3

	start=`date +%s` 
	display_colored_msg "FETCHING HOPS-GPU-MANAGEMENT" 
    exe_and_display "cd $base_folder/hops-gpu-management && git pull" 

	display_colored_msg "FETCHING HOPS-GPU-MANAGEMENT-IMPL-NVIDIA" 
    exe_and_display "cd $base_folder/hops-gpu-management-impl-nvidia && git pull" 

	display_colored_msg "FETCHING HOPS-GPU-MANAGEMENT-IMPL-AMD" 
    exe_and_display "cd $base_folder/hops-gpu-management-impl-amd && git pull" 

	display_colored_msg "FETCHING HOPS-METADATA-DAL" 
	exe_and_display "cd $base_folder/hops-metadata-dal " 
	exe_and_display "git checkout $dst_branch" 
	exe_and_display "git fetch $src_remote" 
    exe_and_display "git rebase $src_remote/$src_branch" 
    exe_and_display "git push" 

	display_colored_msg "FETCHING HOPS-METADATA-DAL-IMPL-NDB" 
	exe_and_display "cd $base_folder/hops-metadata-dal-impl-ndb " 
	exe_and_display "git checkout $dst_branch" 
	exe_and_display "git fetch $src_remote" 
    exe_and_display "git rebase $src_remote/$src_branch" 
    exe_and_display "git push" 

	display_colored_msg "FETCHING HOPS" 
	exe_and_display "cd $base_folder/hops" 
	exe_and_display "git checkout $dst_branch" 
	exe_and_display "git fetch $src_remote" 
    exe_and_display "git rebase $src_remote/$src_branch" 
    exe_and_display "git push" 

	popd &> /dev/null  
	end=`date +%s` 
	runtime=$((end-start)) 
	display_colored_msg "TOTAL COMPILATION TIME IS : $runtime SEC(S)"
