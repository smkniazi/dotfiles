#!/bin/bash
#set -eu
set -e

is_app_installed() {
  type "$1" &>/dev/null
}

# get data either form stdin or from file
buf=$(cat "$@")

# Resolve copy backend: pbcopy (OSX), reattach-to-user-namespace (OSX), xclip/xsel (Linux)
copy_backend=""
if is_app_installed pbcopy; then
  copy_backend="pbcopy"
elif is_app_installed reattach-to-user-namespace; then
  copy_backend="reattach-to-user-namespace pbcopy"
elif [ -n "${DISPLAY-}" ] && is_app_installed xsel; then
  copy_backend="xsel -i --clipboard"
elif [ -n "${DISPLAY-}" ] && is_app_installed xclip; then
  copy_backend="xclip -i -f -selection primary | xclip -i -selection clipboard"
fi

# if copy backend is resolved, copy and exit
if [ -n "$copy_backend" ]; then
  echo -ne "$buf" | eval "$copy_backend" 
  if [ ! -z $TMUX ];  then
    tmux display-message "Copied to system clipboard"
  fi
  exit;
fi


# Copy via OSC 52 ANSI escape sequence to controlling terminal
buflen=$( printf %s "$buf" | wc -c )

# https://sunaku.github.io/tmux-yank-osc52.html
# The maximum length of an OSC 52 escape sequence is 100_000 bytes, of which
# 7 bytes are occupied by a "\033]52;c;" header, 1 byte by a "\a" footer, and
# 99_992 bytes by the base64-encoded result of 74_994 bytes of copyable text
maxlen=74994 

# warn if exceeds maxlen
if [ "$buflen" -gt "$maxlen" ]; then
  printf "input is %d bytes too long" "$(( buflen - maxlen ))" >&2
fi

# build up OSC 52 ANSI escape sequence
esc="\033]52;c;$( printf %s "$buf" | head -c $maxlen | base64 | tr -d '\r\n' )\a"

# resolve target terminal to send escape sequence
if [ ! -z $SSH_TTY ]; then
  target_tty=$SSH_TTY
else 
  if [ ! -z $TMUX ]; then
    target_tty=$(tmux list-panes -F "#{pane_active} #{pane_tty}" | awk '$1=="1" { print $2 }')
  else
    target_tty=$(ps hotty $$) 
    target_tty="/dev/$target_tty"
  fi
fi

printf "$esc" > "$target_tty"

if [ ! -z $TMUX ]; then
  tmux display-message "Copied to system clipboard tty -> $target_tty"
fi

